-- flag to de/activate shuttling feature
supportShuttle = false

-- Effects

function forward()
    myo.keyboard("right_arrow", "press")
end

function backward()
    myo.keyboard("left_arrow", "press")
end

function scrollDown()
    myo.keyboard("down_arrow", "press")
end

function scrollUp()
    myo.keyboard("up_arrow", "press")
end

-- Helpers

function getMyoRollDegrees()
    local rollValue = math.deg(myo.getRoll())
    return rollValue
end

function degreeDiff(value, base)
    local diff = value - base

    if diff > 180 then
        diff = diff - 360
    elseif diff < -180 then
        diff = diff + 360
    end

    return diff
end

function conditionallySwapWave(pose)
    myo.debug(pose)
    if myo.getArm() == "left" then
        if pose == "waveIn" then
            pose = "waveOut"
        elseif pose == "waveOut" then
            pose = "waveIn"
        end
    end
    return pose
end

-- Shuttle

function shuttleBurst()
    if shuttleDirection == "forward" then
        forward()
    elseif shuttleDirection == "backward" then
        backward()
    end
end

-- Triggers

function onPoseEdge(pose, edge)
    local now = myo.getTimeMilliseconds()
    -- Forward/backward and shuttle
    if pose == "waveIn" or pose == "waveOut" then
        local now = myo.getTimeMilliseconds()

        if edge == "on" then
            -- Deal with direction and arm
            pose = conditionallySwapWave(pose)

            if pose == "waveIn" then
                shuttleDirection = "backward"
            else
                shuttleDirection = "forward"
            end

            -- Extend unlock and notify user
            myo.unlock("hold")
            myo.notifyUserAction()

            -- Initial burst
            shuttleBurst()
            shuttleSince = now
            shuttleTimeout = SHUTTLE_CONTINUOUS_TIMEOUT
        end
        if edge == "off" then
            myo.unlock("timed")
            shuttleTimeout = nil
        end
    end

    if pose == "fist" then
        scrolleActive = edge == "on"
        rollReference = getMyoRollDegrees()
        scrollSince = now
        myo.unlock(edge == "on" and "hold" or "timed")
        myo.notifyUserAction()
    end
end

-- All timeouts in milliseconds
SHUTTLE_CONTINUOUS_TIMEOUT = 600
SHUTTLE_CONTINUOUS_PERIOD = 300

VERY_FAST_SCROLL_THRESHOLD = 15 -- degrees
VERY_FAST_SCROLL_PERIOD = 50

FAST_SCROLL_THRESHOLD = 10 -- degrees
FAST_SCROLL_PERIOD = 100

SLOW_SCROLL_THRESHOLD = 5 -- degrees
SLOW_SCROLL_PERIOD = 200

function onPeriodic()
    local now = myo.getTimeMilliseconds()
    if supportShuttle and shuttleTimeout then
        if (now - shuttleSince) > shuttleTimeout then
            shuttleBurst()
            shuttleTimeout = SHUTTLE_CONTINUOUS_PERIOD
            shuttleSince = now
        end
    end
    if scrolleActive then
        local relativeRoll = degreeDiff(getMyoRollDegrees(), rollReference)
        if math.abs(relativeRoll) > VERY_FAST_SCROLL_THRESHOLD then
            if now - scrollSince > VERY_FAST_SCROLL_PERIOD then
                if relativeRoll > 0 then
                    scrollDown()
                else
                    scrollUp()
                end
                scrollSince = now
            end
        elseif math.abs(relativeRoll) > FAST_SCROLL_THRESHOLD then
            if now - scrollSince > FAST_SCROLL_PERIOD then
                if relativeRoll > 0 then
                    scrollDown()
                else
                    scrollUp()
                end
                scrollSince = now
            end
        elseif math.abs(relativeRoll) > SLOW_SCROLL_THRESHOLD then
            if now - scrollSince > SLOW_SCROLL_PERIOD then
                if relativeRoll > 0 then
                    scrollDown()
                else
                    scrollUp()
                end
                scrollSince = now
            end
        end
    end
end
scriptId = 'de.phillippohlandt.SobooksReader'
scriptDetailsUrl = ''
scriptTitle = 'Sobooks.de Reader Connector'

function onForegroundWindowChange(app, title)
    if string.match(title, "% | Sobooks.de") and string.match(title, "Seite") then
        return true
    end
end

function activeAppName()
    return "Sobooks.de Reader"
end
